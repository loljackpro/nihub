--https://www.roblox.com/games/11063612131/Every-Second-You-Get-1-Jump-Power

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then local v61=0;while true do if (v61==0) then v18=v0(v3(v29,1,1));return "";end end else local v62=v2(v0(v29,16));if v18 then local v67=0;local v68;while true do if (v67==1) then return v68;end if (v67==0) then v68=v5(v62,v18);v18=nil;v67=1;end end else return v62;end end end);local function v19(v30,v31,v32)if v32 then local v63=(v30/((1262 -(1091 + 169))^(v31-1)))%(2^(((v32-(1 + 0)) -(v31-(1 + 0))) + 1 + 0));return v63-(v63%1);else local v64=0 -0;local v65;while true do if ((70 -(21 + 46 + 3))==v64) then v65=((2 -1) + 1)^(v31-(2 -1));return (((v30%(v65 + v65))>=v65) and (2 -1)) or (0 -0);end end end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38,v39=v1(v15,v17,v17 + 2);v17=v17 + (306 -(257 + 47));return (v39 * (134 + 122)) + v38;end local function v22()local v40,v41,v42,v43=v1(v15,v17,v17 + (5 -2));v17=v17 + 4;return (v43 * (52019589 -35242373)) + (v42 * (43301 + 22235)) + (v41 * (359 -103)) + v40;end local function v23()local v44=v22();local v45=v22();return (( -(1672 -(177 + 1493)) * v19(v45,(47 -28) + 13)) + 1) * (2^(v19(v45,112 -(30 + 61),16 + 6 + 9) -(1230 -(65 + (401 -259))))) * ((((v19(v45,1,968 -(257 + 691)) * ((911 -(510 + 399))^(130 -(94 + 4)))) + v44)/((4 -2)^(10 + 42))) + 1);end local function v24(v33)local v46=1254 -((12 -5) + 105 + 1142);local v47;local v48;while true do if (v46==(5 -2)) then return v6(v48);end if (v46==(0 -0)) then v47=nil;if  not v33 then v33=v22();if (v33==(0 -0)) then return "";end end v46=684 -(587 + 96);end if (v46==(6 -4)) then v48={};for v69=1 + 0, #v47 do v48[v69]=v2(v1(v3(v47,v69,v69)));end v46=1878 -(197 + 1678);end if (v46==(1 + 0)) then v47=v3(v15,v17,(v17 + v33) -(1 + 0));v17=v17 + v33;v46=2;end end end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v49=0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (v49~=(2 -1)) then else v52=nil;v53=nil;v49=2;end if (v49==2) then local v66=0;while true do if (v66==1) then v49=3;break;end if (v66~=(297 -(161 + 136))) then else v54=nil;v55=nil;v66=1;end end end if (3==v49) then v56=nil;while true do local v71=0;while true do if (v71~=0) then else if (v50~=(1 + 0)) then else local v92=267 -(86 + 181);local v93;while true do if (v92==(1465 -(372 + 1093))) then v93=0;while true do if (v93==(0 + 0)) then local v108=0 + 0;while true do if (v108~=0) then else v55=v22();v56={};v108=1;end if (v108==(1 + 0)) then v93=509 -(422 + 86);break;end end end if (v93~=2) then else v50=1 + 1;break;end if (1~=v93) then else local v109=0 -0;while true do if (1==v109) then v93=2;break;end if (v109==0) then for v116=1 + 0,v55 do local v117=0;local v118;local v119;local v120;while true do if (v117~=(1225 -(264 + 961))) then else v118=0 + 0;v119=nil;v117=1;end if (v117==1) then v120=nil;while true do if (v118~=1) then else if (v119==1) then v120=v20()~=(1939 -(1315 + 624));elseif (v119==2) then v120=v23();elseif (v119==3) then v120=v24();end v56[v116]=v120;break;end if (v118~=0) then else local v162=0;local v163;while true do if (0==v162) then v163=0 + 0;while true do if (v163==(1841 -(1486 + 355))) then local v179=0 -0;local v180;while true do if (v179==0) then v180=0 -0;while true do if (v180==(1 + 0)) then v163=1566 -(488 + 1077);break;end if (v180~=0) then else local v194=0;while true do if (v194==(1 -0)) then v180=1;break;end if (v194~=0) then else v119=v20();v120=nil;v194=3 -2;end end end end break;end end end if ((1125 -(1021 + 103))~=v163) then else v118=1;break;end end break;end end end end break;end end end v54[3]=v20();v109=1237 -(189 + 1047);end end end end break;end end end if (v50==(0 -0)) then local v94=0;while true do if (v94~=(0 -0)) then else v51={};v52={};v94=1221 -(517 + 703);end if (v94==1) then v53={};v54={v51,v52,nil,v53};v94=1036 -(199 + 835);end if (v94==(1088 -(706 + 380))) then v50=3 -2;break;end end end v71=1964 -(1872 + 91);end if (v71==(893 -(652 + 240))) then if (v50~=(1242 -(961 + 279))) then else for v95=1,v22() do local v96=0;local v97;local v98;while true do if (v96~=(1 -0)) then else while true do if (v97~=0) then else v98=v20();if (v19(v98,1,2 -1)==0) then local v111=0;local v112;local v113;local v114;local v115;while true do if (v111~=1) then else v114=nil;v115=nil;v111=2 -0;end if (2==v111) then while true do if (v112~=1) then else local v147=549 -(65 + 484);while true do if (v147==0) then v115={v21(),v21(),nil,nil};if (v113==(1959 -(422 + 1537))) then local v171=0;local v172;while true do if (0==v171) then v172=0;while true do if (v172==(0 + 0)) then v115[3]=v21();v115[14 -10]=v21();break;end end break;end end elseif (v113==(1 -0)) then v115[3]=v22();elseif (v113==(2 -0)) then v115[2 + 1]=v22() -((2 + 0)^16);elseif (v113==3) then local v190=0 -0;local v191;local v192;while true do if (v190==1) then while true do if (v191~=0) then else v192=0;while true do if (v192==0) then v115[13 -10]=v22() -(2^(873 -(55 + 802)));v115[4 + 0]=v21();break;end end break;end end break;end if (v190==(0 + 0)) then v191=0 -0;v192=nil;v190=1;end end end v147=1392 -(574 + 817);end if (v147==(295 -(143 + 151))) then v112=2;break;end end end if (v112==(1735 -(1025 + 710))) then local v148=0;while true do if (v148==0) then v113=v19(v98,2,1313 -(466 + 844));v114=v19(v98,4,1545 -(301 + 1238));v148=212 -(96 + 115);end if (v148==1) then v112=1;break;end end end if (v112~=(2 + 0)) then else local v149=0;while true do if (v149~=(0 + 0)) then else if (v19(v114,1 + 0,1)~=1) then else v115[2 -0]=v56[v115[2]];end if (v19(v114,2 + 0,5 -3)==(3 -2)) then v115[1808 -(1558 + 247)]=v56[v115[3 + 0]];end v149=1;end if (v149~=1) then else v112=7 -4;break;end end end if (v112==(623 -(301 + 319))) then if (v19(v114,1767 -(1540 + 224),1 + 2)==1) then v115[4]=v56[v115[4]];end v51[v95]=v115;break;end end break;end if (v111==(0 + 0)) then v112=18 -(6 + 12);v113=nil;v111=2 -1;end end end break;end end break;end if ((0 + 0)==v96) then local v105=0 + 0;while true do if (v105==1) then v96=1 + 0;break;end if (0==v105) then v97=1349 -(636 + 713);v98=nil;v105=934 -(319 + 614);end end end end end for v99=1 + 0,v22() do v52[v99-(1360 -(92 + 1267))]=v27();end for v101=1,v22() do v53[v101]=v22();end return v54;end break;end end end break;end if (v49==(664 -(115 + 549))) then v50=0;v51=nil;v49=1;end end end local function v28(v34,v35,v36)local v57=0;local v58;local v59;local v60;while true do if (v57==1) then v60=v34[3];return function(...)local v72=1;local v73= -1;local v74={...};local v75=v11("#",...) -1;local function v76()local v77=v58;local v78=Const;local v79=v59;local v80=v60;local v81=v26;local v82={};local v83={};local v84={};for v89=0 -0,v75 do if ((v89>=v80) or (((19873 -(26 + 894)) -14972)<=(1178 -624))) then v82[v89-v80]=v74[v89 + (1 -0)];else v84[v89]=v74[v89 + (3 -2)];end end local v85=(v75-v80) + 1;local v86;local v87;while true do local v90=0 + 0;local v91;while true do if ((3008<(6661 -(774 + 1189))) and (v90==(44 -(32 + 12)))) then v91=206 -(11 + 195);while true do if (((9868 -5800)<(3823 + 671)) and (v91==0)) then local v106=0 -0;local v107;while true do if ((v106==(91 -(17 + 74))) or (4048<=(4373 -(76 + 1740)))) then v107=0 -(0 + 0);while true do if ((3603<(4193 -(23 + 25))) and (v107==(4 -3))) then v91=3 -(5 -3);break;end if ((2244>(2793 -1444)) and (v107==(0 + 0))) then local v121=1865 -(1820 + 45);while true do if (((2941 + 1795)>(3054 -(353 + 771))) and (v121==(1 -0))) then v107=1 + 0;break;end if ((0==v121) or (((1123 + 3515) -(122 + 140))<(17414 -13414))) then v86=v77[v72];v87=v86[(263 + 1328) -(1493 + 97)];v121=1244 -(769 + 474);end end end end break;end end end if ((4129==((2224 -(37 + 538)) + 2480)) and (v91==(2 -1))) then if (((2786 -(363 + 1186))<=(4264 + 215)) and (v87<=(2 + 8))) then if ((2574==(3376 -(344 + 458))) and (v87<=(2 + 2))) then if (((185 + 1744)>=1482) and (v87<=(48 -(12 + 35)))) then if (((663 + 776 + 1946)==(5213 -(1707 + 121))) and (v87==0)) then v84[v86[2]]=v36[v86[4 -1]];else local v123=0 + 0;local v124;local v125;local v126;local v127;while true do if (((5313 -(1554 + 23))>=278) and (v123==(907 -((168 -90) + 827)))) then while true do if ((v124==(0 -0)) or ((980 -239)>=(668 + 4262))) then v125=0;v126=nil;v124=327 -((1060 -(385 + 419)) + 70);end if (((286 + 167)<(9977 -6509)) and (v124==(1997 -(241 + (3215 -1460))))) then v127=nil;while true do if ((v125==((2964 -1249) -((1415 -(12 + 120)) + 431))) or (3650==(13745 -9071))) then v84[v126 + 1]=v127;v84[v126]=v127[v86[9 -5]];break;end if ((((8979 -3081) -(480 + 449))>(816 + 3152)) and (v125==0)) then local v184=0 -0;local v185;while true do if ((v184==((666 -(49 + 1)) -(432 + 5 + 179))) or ((1837 -(675 + 289))==((2399 -(949 + 111)) + 772))) then v185=0 -0;while true do if (((638 + 1334)<=(19547 -14646)) and ((717 -((670 -(167 + 10)) + 223))==v185)) then v125=279 -(64 + 214);break;end if ((v185==(0 -0)) or ((758 -(96 + 476))>=(7605 -(5666 -(119 + 247))))) then local v195=0 -0;while true do if ((v195==(0 + 0)) or (3893<=((419 + 923) -(343 + 170)))) then v126=v86[3 -1];v127=v84[v86[7 -4]];v195=53 -(31 + 21);end if (((2 -1)==v195) or ((8394 -6357)>(4486 -(90 + 189)))) then v185=1;break;end end end end break;end end end end break;end end break;end if (((5768 -1694)==4074) and (v123==(1 -0))) then v126=nil;v127=nil;v123=7 -(3 + 2);end if (((250 + (3954 -(236 + 279)))>=480) and (v123==0)) then v124=1653 -(386 + 1267);v125=nil;v123=1 + 0;end end end elseif ((v87<=2) or ((7098 -2125)<=(1412 + 1175))) then local v128=0;local v129;local v130;local v131;while true do if ((v128==(1 + 0)) or ((8196 -5238)==(6274 -(36 + 495 + 1069)))) then v131=nil;while true do if (((1654 -(370 + 348))<=(5163 -(62 + 311))) and ((1882 -(131 + 1751))==v129)) then local v167=0;while true do if ((v167==0) or ((3398 -(129 + 531))<=(1904 -(305 + 20)))) then v130=0;v131=nil;v167=1;end if ((v167==(1810 -(805 + 1004))) or ((27 + 2240 + 2502)<=(2279 -499))) then v129=1 + (996 -(401 + 595));break;end end end if ((v129==(1 + 0)) or ((545 -282)==(4679 -1823))) then while true do if ((v130==(0 + 0)) or ((4179 -(970 + 215))<(129 + 1106))) then v131=v86[4 -2];v84[v131]=v84[v131](v12(v84,v131 + (3 -2),v73));break;end end break;end end break;end if ((1090==1090) and (v128==(0 + 0))) then v129=47 -(41 + 6);v130=nil;v128=1;end end elseif (((9451 -7289)>(2017 -(362 + 262))) and (v87==(3 -0))) then if ((v84[v86[1 + 1]]==v86[4 -(0 -0)]) or ((204 + 446)>(1974 + 1665))) then v72=v72 + 1 + 0;else v72=v86[855 -(313 + 539)];end else v84[v86[9 -7]]=v84[v86[2 + 1]][v86[3 + 1]];end elseif (((6730 -4038)>=((63 + 125) -(41 + 70))) and (v87<=(315 -(22 + 286)))) then if (((1519 -845)==((1551 -(406 + 81)) -390)) and (v87<=(1 + 4))) then local v132=0 + 0;local v133;local v134;while true do if ((v132==(1 + 0 + 0)) or ((1742 + 34)>(81 + (7771 -5742)))) then while true do if ((v133==(0 -0)) or ((15924 -11517)==2428)) then v134=v86[2 + 0];v84[v134]=v84[v134]();break;end end break;end if ((3138>=(191 -123)) and (v132==(1205 -(761 + 444)))) then v133=0 + 0 + 0;v134=nil;v132=1 + 0;end end elseif ((v87==(5 + 1)) or ((1961 -(1182 + 2 + 79))>=(2605 -(287 + 532)))) then v84[v86[2 -0]]();else local v152=0 -0;local v153;local v154;while true do if ((v152==(400 -(165 + 235))) or ((3794 -(65 + 188))>=(5948 -(59 + 1875)))) then v153=0 -0;v154=nil;v152=1;end if ((v152==1) or ((1106 -(716 + 160))>(377 + 740))) then while true do if (((2088 + 2071 + 528)==4687) and (0==v153)) then v154=v86[(1 + 5) -4];v84[v154](v12(v84,v154 + 1 + 0,v86[3]));break;end end break;end end end elseif ((v87<=((459 -(211 + 245)) + 5)) or (((2565 -(405 + 58)) -((186 -82) + 107 + 291))<(1302 -(2479 -1550)))) then v84[v86[1027 -(55 + 259 + 711)]]=v84[v86[2 + 1]];elseif ((v87==(1409 -(606 + 794))) or ((10813 -6910)<=(416 + 1849))) then v84[v86[1981 -(780 + 1199)]]=v86[10 -7];elseif (((2585 -(1213 + 514))<(192 + 2121)) and (v86[4 -2]==v84[v86[15 -11]])) then v72=v72 + (2 -1);else v72=v86[9 -6];end elseif ((v87<=(21 -6)) or ((1967 -(398 + 418))==(827 -(304 + 424)))) then if ((v87<=(57 -(119 -74))) or ((5221 -3358)==4998)) then if (((16655 -12004)>=(5460 -(361 + (2891 -(1749 + 130))))) and (v87==(570 -(270 + 289)))) then local v136=0;local v137;local v138;local v139;local v140;local v141;while true do if (((1 + 1)==v136) or ((2597 + 451 + 179)<((7242 -(571 + 1205)) -3472))) then v141=nil;while true do if ((1826<((5853 -(914 + 170)) -(61 + 747))) and ((1045 -(412 + 631))==v137)) then for v175=v138,v73 do local v176=0;local v177;while true do if (((96 + 46)==142) and (v176==(1935 -(105 + 1830)))) then v177=0 -0;while true do if (((0 -0)==v177) or ((5968 -3386)>4356)) then v141=v141 + (1404 -(58 + (2861 -(216 + 1300))));v84[v175]=v139[v141];break;end end break;end end end break;end if ((v137==(1155 -(855 + 220 + 79))) or ((9315 -5589)<(3004 -(91 + 767)))) then local v169=878 -(804 + 74);while true do if ((v169==(1 + 0)) or ((458 + (4218 -(1067 + 818)))<=410)) then v137=5 -3;break;end if ((v169==(1295 -(539 + 756))) or ((3056 -(162 + (97 -57)))>=(16608 -12063))) then v73=(v140 + v138) -(2 -1);v141=413 -(270 + 143);v169=2 -(165 -(28 + 136));end end end if (((1174 -(156 + 1018))==v137) or ((284 + 1948)<=((542 + 969) -800))) then local v170=1142 -(814 + 328);while true do if ((v170==(1 + 0)) or ((376 + 2311)==(11913 -8528))) then v137=1 + 0;break;end if (((352 + 1490)<=(1914 + 1127)) and (v170==(926 -(551 + 375)))) then v138=v86[2];v139,v140=v81(v84[v138](v12(v84,v138 + 1 + 0,v86[475 -(101 + 371)])));v170=1385 -(1143 + 241);end end end end break;end if ((1976<3230) and (v136==(0 -0))) then v137=800 -(241 + 323 + 236);v138=nil;v136=169 -(22 + 146);end if (((3822 -918)>(2338 + 530)) and (v136==(2 -1))) then v139=nil;v140=nil;v136=3 -1;end end else v72=v86[1 + 2];end elseif (((222 -((170 -105) + 43))<=(4963 -(167 + 463))) and (v87<=(1222 -(591 + 618)))) then v84[v86[826 -(701 + 123)]]=v28(v79[v86[3]],nil,v36);elseif ((v87>(23 -9)) or (2976<(1173 + 456))) then local v156=0 + 0 + 0;local v157;local v158;while true do if (((8710 -5293)>(2581 -1514)) and (v156==0)) then v157=0 + 0;v158=nil;v156=1402 -(303 + 1098);end if (((4005 -898)>=(1268 + 1556)) and (v156==1)) then while true do if ((4786==(5430 -(229 + 415))) and (v157==0)) then v158=v86[1 + 1];v84[v158]=v84[v158](v12(v84,v158 + 1 + 0,v86[(525 + 648) -(96 + 1074)]));break;end end break;end end else v84[v86[1242 -(220 + 1020)]][v86[(440 -(425 + 7)) -(899 -(40 + 854))]]=v84[v86[2 + 2]];end elseif ((3380<=((73820 -54673) -15121)) and (v87<=18)) then if (((5090 -(3899 -(31 + 361)))>=(770 + 811)) and (v87<=16)) then local v143=0 -0;local v144;local v145;while true do if ((1==v143) or ((19730 -15266)==(6329 -3599))) then while true do if ((v144==(0 -0)) or ((681 -(23 + 46))==(4881 -3626))) then v145=v86[1 + (2 -1)];v84[v145](v84[v145 + (1273 -(510 + 762))]);break;end end break;end if (((5946 -(823 + 263))>(256 -119)) and ((0 -0)==v143)) then v144=0 + 0;v145=nil;v143=1 + 0;end end elseif ((v87==(64 -47)) or ((3586 -(106 + 931))<=((1134 + 767) -1372))) then for v164=v86[2],v86[3] do v84[v164]=nil;end else v84[v86[902 -(695 + 205)]]={};end elseif (((232 + 1536)<(10254 -6525)) and (v87<=(38 -19))) then v84[v86[2]][v86[6 -3]]=v86[1373 -(301 + 1068)];elseif ((v87==(1541 -(857 + 664))) or (1359>=(5421 -3934))) then do return;end elseif (v84[v86[5 -3]] or ((413 + 34 + 149)>(174 + (1696 -1056)))) then v72=v72 + (1 -0);else v72=v86[284 -(244 + 37)];end v72=v72 + 1;break;end end break;end end end end A,B=v26(v10(v76));if  not A[1] then local v88=v34[4][v72] or "?";error("Script error at ["   .. v88   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end if (v57==0) then v58=v34[1];v59=v34[2];v57=1;end end end return v28(v27(),{},v16)();end vv8());end
